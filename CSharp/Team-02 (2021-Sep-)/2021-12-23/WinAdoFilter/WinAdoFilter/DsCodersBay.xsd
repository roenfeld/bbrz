<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DsCodersBay" targetNamespace="http://tempuri.org/DsCodersBay.xsd" xmlns:mstns="http://tempuri.org/DsCodersBay.xsd" xmlns="http://tempuri.org/DsCodersBay.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="CodersBayConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="CodersBayConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.WinAdoFilter.Properties.Settings.GlobalReference.Default.CodersBayConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="countriesTableAdapter" GeneratorDataComponentClassName="countriesTableAdapter" Name="countries" UserDataComponentName="countriesTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CodersBayConnectionString (Settings)" DbObjectName="CodersBay.dbo.countries" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[countries] WHERE (([country_id] = @Original_country_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_country_id" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="country_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[countries] ([country_id], [country_name], [region_id]) VALUES (@country_id, @country_name, @region_id);
SELECT country_id, country_name, region_id FROM countries WHERE (country_id = @country_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@country_id" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="country_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@country_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@region_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="region_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT country_id, country_name, region_id FROM dbo.countries</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[countries] SET [country_id] = @country_id, [country_name] = @country_name, [region_id] = @region_id WHERE (([country_id] = @Original_country_id));
SELECT country_id, country_name, region_id FROM countries WHERE (country_id = @country_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@country_id" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="country_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@country_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="country_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@region_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="region_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiStringFixedLength" Direction="Input" ParameterName="@Original_country_id" Precision="0" ProviderType="Char" Scale="0" Size="0" SourceColumn="country_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="country_id" DataSetColumn="country_id" />
              <Mapping SourceColumn="country_name" DataSetColumn="country_name" />
              <Mapping SourceColumn="region_id" DataSetColumn="region_id" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="CodersBayConnectionString (Settings)" DbObjectName="CodersBay.dbo.countries" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByRegionId" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetDataByRegionId" GeneratorSourceName="FillByRegionId" GetMethodModifier="Public" GetMethodName="GetDataByRegionId" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataByRegionId" UserSourceName="FillByRegionId">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT country_id, country_name, region_id FROM dbo.countries
WHERE region_id=@regionId</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="regionId" ColumnName="region_id" DataSourceName="CodersBay.dbo.countries" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@regionId" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="region_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="regionsTableAdapter" GeneratorDataComponentClassName="regionsTableAdapter" Name="regions" UserDataComponentName="regionsTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="CodersBayConnectionString (Settings)" DbObjectName="CodersBay.dbo.regions" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[regions] WHERE (([region_id] = @Original_region_id))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_region_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="region_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[regions] ([region_name]) VALUES (@region_name);
SELECT region_id, region_name FROM regions WHERE (region_id = SCOPE_IDENTITY())</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@region_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="region_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT region_id, region_name FROM dbo.regions</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[regions] SET [region_name] = @region_name WHERE (([region_id] = @Original_region_id));
SELECT region_id, region_name FROM regions WHERE (region_id = @region_id)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@region_name" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="region_name" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_region_id" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="region_id" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="region_id" ColumnName="region_id" DataSourceName="CodersBay.dbo.regions" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@region_id" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="region_id" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="region_id" DataSetColumn="region_id" />
              <Mapping SourceColumn="region_name" DataSetColumn="region_name" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DsCodersBay" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="true" msprop:Generator_UserDSName="DsCodersBay" msprop:Generator_DataSetName="DsCodersBay">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="countries" msprop:Generator_RowEvHandlerName="countriesRowChangeEventHandler" msprop:Generator_RowDeletedName="countriesRowDeleted" msprop:Generator_RowDeletingName="countriesRowDeleting" msprop:Generator_RowEvArgName="countriesRowChangeEvent" msprop:Generator_TablePropName="countries" msprop:Generator_RowChangedName="countriesRowChanged" msprop:Generator_RowChangingName="countriesRowChanging" msprop:Generator_TableClassName="countriesDataTable" msprop:Generator_RowClassName="countriesRow" msprop:Generator_TableVarName="tablecountries" msprop:Generator_UserTableName="countries">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="country_id" msprop:Generator_ColumnPropNameInRow="country_id" msprop:Generator_ColumnPropNameInTable="country_idColumn" msprop:Generator_ColumnVarNameInTable="columncountry_id" msprop:Generator_UserColumnName="country_id">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="2" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="country_name" msprop:Generator_ColumnPropNameInRow="country_name" msprop:Generator_ColumnPropNameInTable="country_nameColumn" msprop:Generator_ColumnVarNameInTable="columncountry_name" msprop:Generator_UserColumnName="country_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="40" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="region_id" msprop:Generator_ColumnPropNameInRow="region_id" msprop:Generator_ColumnPropNameInTable="region_idColumn" msprop:Generator_ColumnVarNameInTable="columnregion_id" msprop:Generator_UserColumnName="region_id" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="regions" msprop:Generator_RowEvHandlerName="regionsRowChangeEventHandler" msprop:Generator_RowDeletedName="regionsRowDeleted" msprop:Generator_RowDeletingName="regionsRowDeleting" msprop:Generator_RowEvArgName="regionsRowChangeEvent" msprop:Generator_TablePropName="regions" msprop:Generator_RowChangedName="regionsRowChanged" msprop:Generator_RowChangingName="regionsRowChanging" msprop:Generator_TableClassName="regionsDataTable" msprop:Generator_RowClassName="regionsRow" msprop:Generator_TableVarName="tableregions" msprop:Generator_UserTableName="regions">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="region_id" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_ColumnPropNameInRow="region_id" msprop:Generator_ColumnPropNameInTable="region_idColumn" msprop:Generator_ColumnVarNameInTable="columnregion_id" msprop:Generator_UserColumnName="region_id" type="xs:int" />
              <xs:element name="region_name" msprop:Generator_ColumnPropNameInRow="region_name" msprop:Generator_ColumnPropNameInTable="region_nameColumn" msprop:Generator_ColumnVarNameInTable="columnregion_name" msprop:Generator_UserColumnName="region_name" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="25" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:countries" />
      <xs:field xpath="mstns:country_id" />
    </xs:unique>
    <xs:unique name="regions_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:regions" />
      <xs:field xpath="mstns:region_id" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK__countries__regio__06CD04F7" msdata:parent="regions" msdata:child="countries" msdata:parentkey="region_id" msdata:childkey="region_id" msprop:Generator_UserParentTable="regions" msprop:Generator_UserChildTable="countries" msprop:Generator_RelationVarName="relationFK__countries__regio__06CD04F7" msprop:Generator_UserRelationName="FK__countries__regio__06CD04F7" msprop:Generator_ChildPropName="GetcountriesRows" msprop:Generator_ParentPropName="regionsRow" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>